{"version":3,"sources":["components/ToDo.js","components/ToDoList.js","components/NavBar.js","components/AddTask.js","data.js","components/App.js","index.js"],"names":["ToDo","state","completed","props","task","toggleCompleted","setState","prevState","onToggleCompleted","id","className","this","name","onClick","React","Component","ToDoList","filteredTasks","tasks","match","params","filter","length","Fragment","map","NavBar","onDeleteCompleted","to","exact","AddTask","handleSubmit","event","preventDefault","onAddTask","newTask","value","history","push","onSubmit","htmlFor","type","required","ref","elem","data","App","localStorage","getItem","JSON","parse","taskId","taskToUpdate","find","newTaskName","uniqid","process","console","log","componentDidMount","shouldComponentUpdate","componentDidUpdate","setItem","stringify","componentWillUnmount","path","render","ReactDOM","document","getElementById"],"mappings":"2PA2BeA,E,4MAtBXC,MAAQ,CACJC,UAAW,EAAKC,MAAMC,KAAKF,W,EAG/BG,gBAAkB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBL,WAAYK,EAAUL,cAG1B,EAAKC,MAAMK,kBAAkB,EAAKL,MAAMC,KAAKK,K,4CAGjD,WAAS,IAAD,OACJ,OACI,qBAAIC,UAAW,oBAAsBC,KAAKV,MAAMC,UAAY,wBAA0B,MAAtF,UACMS,KAAKR,MAAMC,KAAKQ,KACtB,wBAAQF,UAAW,6CAA+CC,KAAKV,MAAMC,UAAY,oBAAsB,MAAOW,QAAU,kBAAM,EAAKR,mBAA3I,SAA+J,cAAC,IAAD,a,GAlBxJS,IAAMC,WCqCVC,EArCE,SAAC,GAAuC,IAEnDC,EAFaC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOX,EAAuB,EAAvBA,kBAI/B,OAAOW,EAAMC,OAAOC,QAClB,IAAK,YACHJ,EAAgBC,EAAMG,QAAQ,SAAAjB,GAAI,OAAIA,EAAKF,aAC3C,MACF,QACEe,EAAgBC,EAGpB,OAA6B,IAAzBD,EAAcK,OAEd,eAAC,IAAMC,SAAP,WACA,oBAAIb,UAAU,MAAd,0BACM,oBAAIA,UAAU,iBAAd,SACE,oBAAIA,UAAU,kBAAd,0CAMR,eAAC,IAAMa,SAAP,WACA,oBAAIb,UAAU,MAAd,0BACM,oBAAIA,UAAU,iBAAd,SAEIO,EAAcO,KAAK,SAACpB,GAAD,OAAU,cAAC,EAAD,CAAMA,KAAMA,EAAoBI,kBAAmBA,GAA5BJ,EAAKK,a,QCf1DgB,EAXA,SAAC,GAAD,IAAEC,EAAF,EAAEA,kBAAF,OACX,yBAAQhB,UAAU,eAAlB,UACI,sBAAKA,UAAU,YAAf,UACI,cAAC,IAAD,CAASiB,GAAG,IAAIjB,UAAU,uBAAuBkB,OAAO,EAAxD,SAA8D,cAAC,IAAD,MAC9D,cAAC,IAAD,CAASD,GAAG,aAAajB,UAAU,uBAAnC,SAA0D,cAAC,IAAD,MAC1D,cAAC,IAAD,CAASiB,GAAG,YAAYjB,UAAU,uBAAlC,SAAyD,cAAC,IAAD,SAE7D,wBAAQA,UAAU,wCAAwCG,QAASa,EAAnE,SAAsF,cAAC,IAAD,UCkB/EG,E,4MAxBXC,aAAe,SAACC,GACbA,EAAMC,iBACN,EAAK7B,MAAM8B,UAAU,EAAKC,QAAQC,OAClC,EAAKhC,MAAMiC,QAAQC,KAAK,M,4CAG3B,WAAS,IAAD,OACJ,OACI,qCACI,oBAAI3B,UAAU,MAAd,sBACA,qBAAKA,UAAU,WAAf,SACI,uBAAMA,UAAU,YAAY4B,SAAU,SAAAP,GAAK,OAAI,EAAKD,aAAaC,IAAjE,UACI,sBAAKrB,UAAU,iBAAf,UACI,uBAAO6B,QAAQ,WAAf,uBACA,uBAAO7B,UAAU,eAAe8B,KAAK,OAAO5B,KAAK,WAAWH,GAAG,WAAWgC,UAAQ,EAACC,IAAK,SAAAC,GAAI,OAAI,EAAKT,QAAUS,QAEnH,wBAAQH,KAAK,SAAS9B,UAAU,sBAAhC,kC,GAnBFI,IAAMC,W,OCMb6B,EARJ,CACP,CAACnC,GAAG,UAAWG,KAAM,UAAWV,WAAW,GAC3C,CAACO,GAAG,UAAWG,KAAM,gBAAiBV,WAAW,GACjD,CAACO,GAAG,UAAWG,KAAM,eAAgBV,WAAW,GAChD,CAACO,GAAG,UAAWG,KAAM,gBAAiBV,WAAW,GACjD,CAACO,GAAG,UAAWG,KAAM,cAAeV,WAAW,I,iBCyFpC2C,E,4MApFb5C,MAAQ,CACNiB,MAAO4B,aAAaC,QAAQ,QAAUC,KAAKC,MAAOH,aAAaC,QAAQ,SAAYH,G,EAGrFpC,kBAAoB,SAAC0C,GACnB,IAAIC,EAAe,EAAKlD,MAAMiB,MAAMkC,MAAM,SAAAhD,GAAI,OAAIA,EAAKK,KAAOyC,KAC9DC,EAAajD,WAAaiD,EAAajD,UAEvC,EAAKI,UAAS,SAAAC,GAAS,OACrBA,EAAUW,MAAMM,KAAI,SAAApB,GAClB,OAAOA,EAAKK,KAAOyC,EAASC,EAAe/C,S,EAMjD6B,UAAY,SAACoB,GACX,IAAInB,EAAU,CACZzB,GAAI6C,IAAOC,UACX3C,KAAMyC,EACNnD,WAAW,GAEbsD,QAAQC,IAAIvB,GAEZ,EAAK5B,UAAS,SAAAC,GAAS,MAAK,CAC1BW,MAAM,GAAD,mBAAMX,EAAUW,OAAhB,CAAuBgB,S,EAShCR,kBAAoB,WAClB,EAAKpB,UAAS,SAAAC,GAEZ,MAAO,CACLW,MAFaX,EAAUW,MAAMG,QAAO,SAAAjB,GAAI,OAAKA,EAAKF,kB,EAWxDwD,kBAAoB,WAElB,OADAF,QAAQC,IAAI,iCACL,G,EAGTE,sBAAwB,WAEtB,OADAH,QAAQC,IAAI,qCACL,G,EAGTG,mBAAqB,WAGnB,OAFAd,aAAae,QAAQ,OAAOb,KAAKc,UAAU,EAAK7D,MAAMiB,QACtDsC,QAAQC,IAAI,kCACL,G,EAGTM,qBAAuB,WAErB,OADAP,QAAQC,IAAI,oCACL,G,4CAGT,WAAU,IAAD,OAEP,OADAD,QAAQC,IAAI,qBAEV,kCACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOO,KAAK,YAAYC,OAAS,SAAC9D,GAAD,OAAW,cAAC,EAAD,2BAAaA,GAAb,IAAoB8B,UAAW,EAAKA,gBAChF,cAAC,IAAD,CAAO+B,KAAK,YAAYC,OAAS,SAAC9D,GAAD,OAAW,cAAC,EAAD,2BAAcA,GAAd,IAAqBe,MAAO,EAAKjB,MAAMiB,MAAOV,kBAAmB,EAAKA,2BAEpH,cAAC,EAAD,CAAQkB,kBAAmBf,KAAKe,6B,GA/ExBZ,IAAMC,WCDxBmD,IAASD,OACP,cAAC,EAAD,IACAE,SAASC,eAAe,W","file":"static/js/main.55311f39.chunk.js","sourcesContent":["import React from 'react';\nimport { FaCheck } from 'react-icons/fa';\n\nclass ToDo extends React.Component{\n    \n    state = {\n        completed: this.props.task.completed\n    }\n\n    toggleCompleted = () => {\n        this.setState(prevState => ({\n            completed: !prevState.completed\n        }))\n\n        this.props.onToggleCompleted(this.props.task.id)\n    }\n\n    render(){\n        return(\n            <li className={\"list-group-item \" + (this.state.completed ? \"bg-success text-white\" : null )}>\n                { this.props.task.name }\n            <button className={\"btn btn-sm btn-outline-success float-end \" + (this.state.completed ? \"btn-outline-light\" : null)} onClick={ () => this.toggleCompleted() }><FaCheck /></button>\n            </li>\n        )\n    }\n}\n\nexport default ToDo","import React from 'react';\nimport ToDo from './ToDo';\n\nconst ToDoList = ({tasks, match, onToggleCompleted}) => {\n  \n  let filteredTasks;\n\n  switch(match.params.filter){\n    case 'completed':\n      filteredTasks = tasks.filter( task => task.completed )\n      break;\n    default:\n      filteredTasks = tasks\n  }\n\n  if (filteredTasks.length === 0){\n    return(\n      <React.Fragment>\n      <h1 className=\"m-3\">My Todo List</h1>\n            <ul className=\"list-group m-3\">\n              <li className=\"list-group-item\">No task to display here</li>\n            </ul>\n      </React.Fragment>\n    )\n  } else {\n    return(\n      <React.Fragment>\n      <h1 className=\"m-3\">My Todo List</h1>\n            <ul className=\"list-group m-3\">\n              {\n                filteredTasks.map( (task) => <ToDo task={task} key={task.id} onToggleCompleted={onToggleCompleted} />)\n              }\n            </ul>\n      </React.Fragment>\n      )\n  }\n\n    \n}\n\nexport default ToDoList;","import React from 'react';\nimport { FaListAlt, FaCheckSquare, FaPlusSquare, FaTrash } from 'react-icons/fa';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = ({onDeleteCompleted}) => (\n    <footer className=\"p-3 bg-light\">\n        <div className=\"btn-group\">\n            <NavLink to=\"/\" className=\"btn btn-outline-dark\" exact={true}><FaListAlt /></NavLink>\n            <NavLink to=\"/completed\" className=\"btn btn-outline-dark\"><FaCheckSquare /></NavLink>\n            <NavLink to=\"/add-task\" className=\"btn btn-outline-dark\"><FaPlusSquare /></NavLink>\n        </div>\n        <button className=\"btn btn-sm btn-outline-dark float-end\" onClick={onDeleteCompleted}><FaTrash /></button>\n    </footer>\n)\n\nexport default NavBar","import React from 'react';\n\nclass AddTask extends React.Component{\n\n\n    handleSubmit = (event) => {\n       event.preventDefault()\n       this.props.onAddTask(this.newTask.value)\n       this.props.history.push('/')\n    }\n\n    render(){\n        return(\n            <>\n                <h1 className=\"m-3\">New Task</h1>\n                <div className=\"card m-3\">\n                    <form className=\"card-body\" onSubmit={event => this.handleSubmit(event) }>\n                        <div className=\"form-group m-2\">\n                            <label htmlFor=\"taskName\">Task Name</label>\n                            <input className=\"form-control\" type=\"text\" name=\"taskName\" id=\"taskName\" required ref={elem => this.newTask = elem}></input>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-success m-2\">Add Task</button>\n                    </form>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default AddTask","let data = [\n    {id:'123456a', name: \"Wake up\", completed: false},\n    {id:'123456b', name: \"Take a shower\", completed: false},\n    {id:'123456c', name: \"Drink coffee\", completed: false},\n    {id:'123456d', name: \"Eat breakfast\", completed: false},\n    {id:'123456e', name: \"Start Teams\", completed: false}\n]\n\nexport default data","import React from 'react';\nimport ToDoList from './ToDoList';\nimport NavBar from './NavBar';\nimport AddTask from './AddTask';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport data from '../data';\nimport uniqid from 'uniqid';\n\nclass App extends React.Component {\n\n  state = {\n    tasks: localStorage.getItem('data') ? JSON.parse( localStorage.getItem('data') ) : data\n  }\n\n  onToggleCompleted = (taskId) => {\n    let taskToUpdate = this.state.tasks.find( task => task.id === taskId )\n    taskToUpdate.completed = !taskToUpdate.completed\n\n    this.setState(prevState => (\n      prevState.tasks.map(task => {\n        return task.id === taskId ? taskToUpdate : task\n      })\n    ))\n    /* localStorage.setItem('data',JSON.stringify(this.state.tasks)); */\n  }\n\n  onAddTask = (newTaskName) => {\n    let newTask = {\n      id: uniqid.process(),\n      name: newTaskName,\n      completed: false\n    }\n    console.log(newTask)\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, newTask]\n    }))\n\n    /* setTimeout( () => {\n      localStorage.setItem('data',JSON.stringify(this.state.tasks))\n    },500) */\n\n  }\n\n  onDeleteCompleted = () => {\n    this.setState(prevState => {\n      let newState = prevState.tasks.filter(task => !task.completed )\n      return {\n        tasks: newState\n      }\n    })\n\n    /* setTimeout( () => {\n      localStorage.setItem('data',JSON.stringify(this.state.tasks))\n    },500) */\n  }\n\n  componentDidMount = () => {\n    console.log('Hello from componentDidMount');\n    return true\n  }\n\n  shouldComponentUpdate = () => {\n    console.log('Hello from shouldComponentUpdate');\n    return true\n  }\n\n  componentDidUpdate = () => {\n    localStorage.setItem('data',JSON.stringify(this.state.tasks));\n    console.log('Hello from componentDidUpdate');\n    return true\n  }\n\n  componentWillUnmount = () => {\n    console.log('Hello from componentWillUnmount');\n    return true\n  }\n\n  render() {\n    console.log('Hello from render');\n    return (\n      <section>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/add-task\" render={ (props) => <AddTask {...props} onAddTask={this.onAddTask} /> } />\n            <Route path=\"/:filter?\" render={ (props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} /> } />\n          </Switch>\n          <NavBar onDeleteCompleted={this.onDeleteCompleted} />\n        </BrowserRouter>\n      </section>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './custom.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}